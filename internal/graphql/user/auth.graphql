extend type Query {
    user: UserInformation @hasLogined
    checkSMS(smsId: String!, smsCode: String!): CheckSMS! # 检测code是否正确
    captcha: Captcha
    userLogin(smsId: String!, smsCode: String!): AuthPayload! # user login
    friendship: Friendships! # 我的朋友
}

extend type Mutation {
    sendSMS(input: PhoneInput): SMS # send sms
    userRegistration(input: UserRegistration): AuthPayload # 用户注册
}

input UserRegistration {
    fullName: String!
    nickName: String!
    birthday: String!
    email: String!
    about: String!
    avatar: String!

    smsId: String!
    smsCode: String!
}

input PhoneInput {
    phoneNumber: String!
}

type SMS {
    smsId: String!
}

type CheckSMS {
    ok: Boolean!
}

type Captcha {
    base64Captcha: String!
    captchaId: String!
}

type UserInformation {
    accountId: String!
    account: String!
    fullName: String!
    nickName: String!
    birthday: String!
    email: String!
    about: String!
    avatar: String!
}

# user roles
enum Role {
    GeneralUser
    Admin
}

type Friendships {
    friendships: [Friendship!]!
}

type Friendship {
    accountId: String!
    account: String!
    fullName: String!
    nickName: String!
    birthday: String!
    email: String!
    about: String!
    avatar: String!
}